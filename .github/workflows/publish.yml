name: Publish Maven Artifacts & Javadoc

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{ github.event.release.tag_name }}

    steps:
      - uses: actions/checkout@v4

      # 1) JDK 21 installieren
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # 2) Maven Build & Deploy
      - name: Build and Deploy to Local Repo
        run: mvn clean deploy -DskipTests

      # 3) Deploy das Maven-Repo auf repo.tsgscraft.com
      - name: Deploy Maven Repo to repo.tsgscraft.com
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: repo-tsgscraft
          directory: target/repo
          branch: main

      # 4) Bestehende Javadocs von vorherigen Deployments wiederherstellen
      - name: Checkout existing Javadoc branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: gh-pages
          path: old-docs
          persist-credentials: false  # Nur lesender Checkout

      # 5) Neue Javadoc generieren und in Versions-Ordner verschieben
      - name: Extract Javadoc to versioned folder
        run: |
          mkdir -p docs
          cp -r old-docs/* docs/ || true
          mkdir -p docs/${VERSION}
          unzip target/*-javadoc.jar -d docs/${VERSION}

      # 6) Deploy versionierte Javadoc auf ppdocs.tsgscraft.com
      - name: Deploy Javadoc to ppdocs.tsgscraft.com
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ppdocs-tsgscraft
          directory: docs
          branch: main